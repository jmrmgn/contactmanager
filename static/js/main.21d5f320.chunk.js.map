{"version":3,"sources":["components/layout/Header.js","components/pages/About.js","context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/test/Test.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","branding","react_default","a","createElement","className","Link","to","defaultProps","About","Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","users","wrap","_context","prev","next","axios","get","sent","data","t0","console","log","stop","children","Component","Consumer","Contact","showContactInfo","onShowClick","onDeleteClick","delete","_this2","_this$props$contact","name","email","phone","onClick","bind","style","cursor","float","color","marginRight","Contacts","Fragment","contacts_Contact","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","onSubmit","e","_this$state","newContact","res","preventDefault","abrupt","post","history","push","onContactChange","defineProperty","target","_this$state2","layout_TextInputGroup","EditContact","updateContact","match","params","put","Test","title","completed","fetch","then","response","json","NotFound","App","context_Provider","HashRouter","basename","process","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.21d5f320.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n   const { branding } = props;\r\n   return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n         <div className=\"container\">\r\n            <Link to=\"/\" className=\"navbar-brand\">{branding}</Link>\r\n            <div>\r\n               <ul className=\"navbar-nav mr-auto\">\r\n                  <li className=\"nav-item\">\r\n                     <Link to=\"/\" className=\"nav-link\">\r\n                        <i className=\"fas fa-home\"></i> Home\r\n                     </Link>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                     <Link to=\"/contact/add\" className=\"nav-link\">\r\n                        <i className=\"fas fa-plus\"></i> Add\r\n                     </Link>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                     <Link to=\"/about\" className=\"nav-link\">\r\n                        <i className=\"fas fa-question\"></i> About\r\n                     </Link>\r\n                  </li>\r\n                  {/* <li className=\"nav-item\">\r\n                     <Link to=\"/test\" className=\"nav-link\">\r\n                        Test\r\n                     </Link>\r\n                  </li> */}\r\n               </ul>\r\n            </div>\r\n         </div>\r\n      </nav>\r\n   );\r\n};\r\n\r\nHeader.defaultProps = {\r\n   branding: 'My App'\r\n};\r\n\r\nHeader.propTypes = {\r\n   branding: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nexport default () => {\r\n   return (\r\n      <div>\r\n         <h1 className=\"display-4\">About Contact</h1>\r\n         <p className=\"lead\">Simple app to manage contacts</p>\r\n         <p className=\"text-secondary\">Version 1.0.0</p>\r\n      </div>\r\n   );\r\n}","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n   switch (action.type) {\r\n      case 'DELETE_CONTACT':\r\n         return {\r\n            ...state,\r\n            contacts: state.contacts.filter(contact => contact.id !== action.payload)\r\n         };\r\n      \r\n      case 'ADD_CONTACT':\r\n         return {\r\n            ...state,\r\n            contacts: [action.payload, ...state.contacts]\r\n         };\r\n      \r\n      case 'UPDATE_CONTACT':\r\n         return {\r\n            ...state,\r\n            contacts: state.contacts.map(contact => {\r\n               return contact = contact.id === action.payload.id ? action.payload : contact;\r\n            })\r\n         };\r\n\r\n      default:\r\n         return state;\r\n   }\r\n};\r\n\r\nexport class Provider extends Component {\r\n   state = {\r\n      contacts: [],\r\n      dispatch: action => {\r\n         this.setState(state => reducer(state, action))\r\n      }\r\n   };\r\n\r\n   async componentDidMount() {\r\n      try {\r\n         const users = await axios.get('https://jsonplaceholder.typicode.com/users')\r\n         this.setState({\r\n            contacts: users.data\r\n         })\r\n      }\r\n      catch (error) {\r\n         console.log(error);\r\n      }  \r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <Context.Provider value={this.state}>\r\n            {this.props.children}\r\n         </Context.Provider>\r\n      );\r\n   }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'axios';\r\n\r\nimport { Consumer } from '../../context';\r\n\r\nclass Contact extends Component {\r\n   state = {\r\n      showContactInfo: false\r\n   };\r\n\r\n   onShowClick = () => {\r\n      this.setState({\r\n         showContactInfo: !this.state.showContactInfo\r\n      });\r\n   };\r\n\r\n   onDeleteClick = async (id, dispatch) => {\r\n      try {\r\n         await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n         dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n      }\r\n      catch(error) {\r\n         console.log(error);\r\n      }\r\n   }\r\n\r\n   render() {\r\n      const { id, name, email, phone } = this.props.contact;\r\n      const { showContactInfo } = this.state;\r\n\r\n      return (\r\n         <Consumer>\r\n            {value => {\r\n               const { dispatch } = value;\r\n               return (\r\n                  <div className=\"card card-body mb-3\">\r\n                     <h4>\r\n                        {name}\r\n                        <i className=\"fas fa-sort-down ml-2 down-arrow\" onClick={this.onShowClick} />\r\n                        <i className=\"fas fa-times delete-arrow\" onClick={this.onDeleteClick.bind(this, id, dispatch)} />\r\n                        <Link to={`/contact/edit/${id}`}>\r\n                           <i \r\n                              className=\"fas fa-pencil-alt\"\r\n                              style = {\r\n                                 {\r\n                                    cursor: 'pointer',\r\n                                    float: 'right',\r\n                                    color: 'black',\r\n                                    marginRight: '1rem'\r\n                                 }\r\n                              }\r\n                           />\r\n                        </Link>\r\n                     </h4>\r\n                     { showContactInfo ? (\r\n                        <ul className=\"list-group\">\r\n                           <li className=\"list-group-item\">Email {email}</li>\r\n                           <li className=\"list-group-item\">Phone: {phone}</li>\r\n                        </ul>\r\n                     ) : null }\r\n                  </div>\r\n               )\r\n            }}\r\n         </Consumer>\r\n      );\r\n   }\r\n}\r\n\r\nContact.propTypes = {\r\n   contact: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\nimport { Consumer } from '../../context';\r\n\r\nclass Contacts extends Component {\r\n\r\n   render() {\r\n      return (\r\n         <Consumer>\r\n            {/* Setting a function to get the value from the CONTEXT */}\r\n            {value => {\r\n               // Value is from the parameters of this function\r\n               const { contacts } = value;\r\n               return (\r\n                  <React.Fragment>\r\n                     <h1 className=\"display mb-2\">\r\n                        <span className=\"text-danger\">Contact</span> List\r\n                     </h1>\r\n                     {\r\n                        contacts.length > 0 \r\n                        ? contacts.map(contact => {\r\n                           return (\r\n                              <Contact \r\n                                 key={contact.id}\r\n                                 contact={contact}\r\n                              />\r\n                           );\r\n                        })\r\n                        :\r\n                        <div className=\"text-center\">\r\n                           <h3 className=\"text-muted\">Loading...</h3>\r\n                        </div>\r\n                     }\r\n                  </React.Fragment>\r\n               )\r\n            }}\r\n         </Consumer>\r\n      );\r\n   };\r\n}\r\n\r\nexport default Contacts;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst TextInputGroup = (props) => {\r\n   const { label, type, name, value, placeholder, onChange, error } = props;\r\n   return (\r\n      <div className=\"form-group\">\r\n         <label htmlFor={name}>{label}</label>\r\n         <input \r\n            type={type}\r\n            name={name}\r\n            className = {\r\n               classnames('form-control form-control-lg', {\r\n                  'is-invalid': error\r\n               })\r\n            }\r\n            placeholder={placeholder}\r\n            value={value}\r\n            onChange={onChange}\r\n         />\r\n         { error ? <div className=\"invalid-feedback\">{error}</div> : null }\r\n         \r\n      </div>\r\n   );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n   label: PropTypes.string.isRequired,\r\n   type: PropTypes.string.isRequired,\r\n   name: PropTypes.string.isRequired,\r\n   value: PropTypes.string.isRequired,\r\n   placeholder: PropTypes.string.isRequired,\r\n   onChange: PropTypes.func.isRequired,\r\n   error: PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n   type: 'text'\r\n};\r\n\r\nexport default TextInputGroup;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\n\r\n\r\nclass AddContact extends Component {\r\n   state = {\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n   };   \r\n\r\n   onSubmit = async (dispatch, e) => {\r\n      e.preventDefault();\r\n      \r\n      const { name, email, phone } = this.state;\r\n\r\n      // Field validations\r\n      if (name === '') {\r\n         this.setState({\r\n            errors: {\r\n               name: 'Name is required'\r\n            }\r\n         });\r\n         return;\r\n      }\r\n\r\n      if (email === '') {\r\n         this.setState({\r\n            errors: {\r\n               email: 'Email is required'\r\n            }\r\n         });\r\n         return;\r\n      }\r\n\r\n      if (phone === '') {\r\n         this.setState({\r\n            errors: {\r\n               phone: 'Phone is required'\r\n            }\r\n         });\r\n         return;\r\n      }\r\n\r\n      const newContact = {\r\n         name,\r\n         email,\r\n         phone,\r\n      };\r\n      \r\n      try {\r\n         const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact)\r\n         dispatch({\r\n            type: 'ADD_CONTACT',\r\n            payload: res.data\r\n         });\r\n      }\r\n      catch (error) {\r\n         console.log(error);\r\n      }\r\n\r\n      // Clear fields\r\n      this.setState({\r\n         name: '',\r\n         email: '',\r\n         phone: '',\r\n         errors: {}\r\n      });\r\n\r\n      // redirect to the link\r\n      this.props.history.push('/');\r\n   };\r\n\r\n   onContactChange = e => {\r\n      this.setState({\r\n         [e.target.name]: e.target.value\r\n      });\r\n   };\r\n\r\n   render() {\r\n      const { name, email, phone, errors } = this.state;\r\n\r\n      return (\r\n         <Consumer>\r\n            {value => {\r\n               const { dispatch } = value;\r\n               return (\r\n                  <div className=\"card mb-3\">\r\n                     <div className=\"card-header\">\r\n                        <h3 className=\"card-title\">Add Contact</h3>\r\n                     </div>\r\n                     <div className=\"card-body\">\r\n                        <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                           <TextInputGroup \r\n                              label=\"Name\"\r\n                              name=\"name\"\r\n                              value={name}\r\n                              placeholder=\"Enter name...\"\r\n                              error={errors.name}\r\n                              onChange={this.onContactChange}\r\n                           />\r\n                           <TextInputGroup \r\n                              label=\"Email\"\r\n                              type=\"email\"\r\n                              name=\"email\"\r\n                              value={email}\r\n                              placeholder=\"Enter email...\"\r\n                              error={errors.email}\r\n                              onChange={this.onContactChange}\r\n                           />\r\n                           <TextInputGroup \r\n                              label=\"Phone\"\r\n                              name=\"phone\"\r\n                              value={phone}\r\n                              placeholder=\"Enter phone...\"\r\n                              error={errors.phone}\r\n                              onChange={this.onContactChange}\r\n                           />\r\n                           <input \r\n                              type=\"submit\"\r\n                              value=\"Add Contact\"\r\n                              className=\"btn btn-primary btn-block\"\r\n                           />\r\n                        </form>\r\n                     </div>\r\n                  </div>\r\n               )\r\n            }}\r\n         </Consumer>\r\n      );\r\n   }\r\n}\r\n\r\nexport default AddContact;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\n\r\nclass EditContact extends Component {\r\n   state = {\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n   };\r\n\r\n   async componentDidMount() {\r\n      const { id } = this.props.match.params;\r\n      const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n      const contact = res.data;\r\n\r\n      this.setState({\r\n         name: contact.name,\r\n         email: contact.email,\r\n         phone: contact.phone,\r\n      });\r\n   }\r\n\r\n   onSubmit = async (dispatch, e) => {\r\n      e.preventDefault();\r\n      \r\n      const { name, email, phone } = this.state;\r\n\r\n      // Field validations\r\n      if (name === '') {\r\n         this.setState({\r\n            errors: {\r\n               name: 'Name is required'\r\n            }\r\n         });\r\n         return;\r\n      }\r\n\r\n      if (email === '') {\r\n         this.setState({\r\n            errors: {\r\n               email: 'Email is required'\r\n            }\r\n         });\r\n         return;\r\n      }\r\n\r\n      if (phone === '') {\r\n         this.setState({\r\n            errors: {\r\n               phone: 'Phone is required'\r\n            }\r\n         });\r\n         return;\r\n      }\r\n\r\n      const updateContact = {\r\n         name,\r\n         email,\r\n         phone\r\n      };\r\n\r\n      const { id } = this.props.match.params;\r\n\r\n      const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updateContact);\r\n\r\n      dispatch({ type: 'UPDATE_CONTACT', payload: res.data });\r\n\r\n      // Clear fields\r\n      this.setState({\r\n         name: '',\r\n         email: '',\r\n         phone: '',\r\n         errors: {}\r\n      });\r\n\r\n      // redirect to the link\r\n      this.props.history.push('/');\r\n   };\r\n\r\n   onContactChange = e => {\r\n      this.setState({\r\n         [e.target.name]: e.target.value\r\n      });\r\n   };\r\n\r\n   render() {\r\n      const { name, email, phone, errors } = this.state;\r\n\r\n      return (\r\n         <Consumer>\r\n            {value => {\r\n               const { dispatch } = value;\r\n               return (\r\n                  <div className=\"card mb-3\">\r\n                     <div className=\"card-header\">\r\n                        <h3 className=\"card-title\">Edit Contact</h3>\r\n                     </div>\r\n                     <div className=\"card-body\">\r\n                        <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                           <TextInputGroup \r\n                              label=\"Name\"\r\n                              name=\"name\"\r\n                              value={name}\r\n                              placeholder=\"Enter name...\"\r\n                              error={errors.name}\r\n                              onChange={this.onContactChange}\r\n                           />\r\n                           <TextInputGroup \r\n                              label=\"Email\"\r\n                              type=\"email\"\r\n                              name=\"email\"\r\n                              value={email}\r\n                              placeholder=\"Enter email...\"\r\n                              error={errors.email}\r\n                              onChange={this.onContactChange}\r\n                           />\r\n                           <TextInputGroup \r\n                              label=\"Phone\"\r\n                              name=\"phone\"\r\n                              value={phone}\r\n                              placeholder=\"Enter phone...\"\r\n                              error={errors.phone}\r\n                              onChange={this.onContactChange}\r\n                           />\r\n                           <input \r\n                              type=\"submit\"\r\n                              value=\"Edit Contact\"\r\n                              className=\"btn btn-primary btn-block\"\r\n                           />\r\n                        </form>\r\n                     </div>\r\n                  </div>\r\n               )\r\n            }}\r\n         </Consumer>\r\n      );\r\n   }\r\n}\r\n\r\nexport default EditContact;","import React, { Component } from 'react';\r\n\r\nclass Test extends Component {\r\n   state = {\r\n      title: '',\r\n      completed: ''\r\n   };\r\n   \r\n   componentDidMount() {\r\n      fetch('https://jsonplaceholder.typicode.com/todos/1')\r\n         .then(response => response.json())\r\n         .then(data => this.setState({\r\n            title: data.title,\r\n            completed: data.completed\r\n         }));\r\n   }\r\n\r\n   // componentWillMount() {\r\n   //    console.log('component will mount...')\r\n   // }\r\n\r\n   // componentDidUpdate() {\r\n   //    console.log('component did Updte');\r\n   // }\r\n\r\n   // componentWillReceiveProps(nextProps, nextState) {\r\n   //    console.log('componentWillReceiveProps');\r\n   // }\r\n\r\n   // static getDerivedStateFromProps(nextProps, prevState) {\r\n   //    return null;\r\n   // }\r\n\r\n   // getSnapshotBeforeUpdate(prevProps, prevState) {\r\n   //    console.log('getSnapshotBeforeUpdate');\r\n   // }\r\n\r\n   render() {\r\n      const { title, completed } = this.state;\r\n      return(\r\n         <div>\r\n            <h2>{title}</h2>\r\n            <p>{completed}</p>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default Test;","import React from 'react';\r\n\r\nexport default () => {\r\n   return (\r\n      <div>\r\n         <h1 className=\"display-4\">\r\n            <span className=\"text-danger\">404</span> Page Not found\r\n         </h1>\r\n         <p className=\"lead\">\r\n            Sorry, that page does not exist\r\n         </p>\r\n      </div>\r\n   );\r\n};","import React, { Component } from 'react';\r\n// Browser = Parent, Route = route, Switch = Error page\r\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\n// Components\r\nimport Header from './components/layout/Header';\r\nimport About from './components/pages/About';\r\nimport Contacts from './components/contacts/Contacts';\r\nimport AddContact from './components/contacts/AddContact';\r\nimport EditContact from './components/contacts/EditContact';\r\n\r\n// Test Component\r\nimport Test from './components/test/Test';\r\n\r\n// Not Found Component\r\nimport NotFound from './components/pages/NotFound';\r\n\r\n// Provider for Context\r\nimport { Provider } from './context';\r\n\r\n// Styles\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n   render() {\r\n      return (\r\n         <Provider>\r\n            <Router basename={process.env.PUBLIC_URL}>\r\n               <div className=\"App\">\r\n                  <Header branding=\"Contact Manager\" />\r\n                  <div className=\"container\">\r\n                     <Switch>\r\n                        <Route exact path=\"/\" component={Contacts} />\r\n                        <Route exact path=\"/about\" component={About} />\r\n                        <Route exact path=\"/contact/add\" component={AddContact} />\r\n                        <Route exact path=\"/contact/edit/:id\" component={EditContact} />\r\n                        <Route exact path=\"/test\" component={Test} />\r\n                        <Route component={NotFound} />\r\n                     </Switch>\r\n                  </div>\r\n               </div>\r\n            </Router>\r\n         </Provider>\r\n      );\r\n   }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}